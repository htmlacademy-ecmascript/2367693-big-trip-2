{"version":3,"file":"bundle.2ac48c4f32dfaa456cd4.js","mappings":"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","sources":["webpack://big-trip/./src/render.js","webpack://big-trip/./src/view/trip-filters-view.js","webpack://big-trip/./src/view/sort-view.js","webpack://big-trip/./src/const.js","webpack://big-trip/./src/view/event-form-view.js","webpack://big-trip/./src/view/event-point-view.js","webpack://big-trip/./src/utils.js","webpack://big-trip/./src/mock/trip-event-mock.js","webpack://big-trip/./src/main.js","webpack://big-trip/./src/model/trip-event-model.js","webpack://big-trip/./src/presenter/trip-presenter.js"],"sourcesContent":["const RenderPosition = {\n  BEFOREBEGIN: 'beforebegin',\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n  AFTEREND: 'afterend',\n};\n\nfunction createElement(template) {\n  const newElement = document.createElement('div');\n  newElement.innerHTML = template;\n\n  return newElement.firstElementChild;\n}\n\nfunction render(component, container, place = RenderPosition.BEFOREEND) {\n  container.insertAdjacentElement(place, component.getElement());\n}\n\nexport {RenderPosition, createElement, render};\n","import { createElement } from '../render.js';\n\nfunction createFiltersTemplate() {\n  return `\n    <form class=\"trip-filters\" action=\"#\" method=\"get\">\n      <div class=\"trip-filters__filter\">\n        <input id=\"filter-everything\" class=\"trip-filters__filter-input visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"everything\" checked>\n        <label class=\"trip-filters__filter-label\" for=\"filter-everything\">Everything</label>\n      </div>\n      <div class=\"trip-filters__filter\">\n        <input id=\"filter-future\" class=\"trip-filters__filter-input visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"future\">\n        <label class=\"trip-filters__filter-label\" for=\"filter-future\">Future</label>\n      </div>\n      <div class=\"trip-filters__filter\">\n        <input id=\"filter-present\" class=\"trip-filters__filter-input visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"present\">\n        <label class=\"trip-filters__filter-label\" for=\"filter-present\">Present</label>\n      </div>\n      <div class=\"trip-filters__filter\">\n        <input id=\"filter-past\" class=\"trip-filters__filter-input visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"past\">\n        <label class=\"trip-filters__filter-label\" for=\"filter-past\">Past</label>\n      </div>\n      <button class=\"visually-hidden\" type=\"submit\">Accept filter</button>\n    </form>\n  `;\n}\n\nexport default class TripFiltersView {\n  getTemplate() {\n    return createFiltersTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render.js';\n\nfunction createSortTemplate() {\n  return `\n    <form class=\"trip-events__trip-sort trip-sort\" action=\"#\" method=\"get\">\n      <div class=\"trip-sort__item trip-sort__item--day\">\n        <input id=\"sort-day\" class=\"trip-sort__input visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-day\" checked>\n        <label class=\"trip-sort__btn\" for=\"sort-day\">Day</label>\n      </div>\n      <div class=\"trip-sort__item trip-sort__item--event\">\n        <input id=\"sort-event\" class=\"trip-sort__input visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-event\" disabled>\n        <label class=\"trip-sort__btn\" for=\"sort-event\">Event</label>\n      </div>\n      <div class=\"trip-sort__item trip-sort__item--time\">\n        <input id=\"sort-time\" class=\"trip-sort__input visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-time\">\n        <label class=\"trip-sort__btn\" for=\"sort-time\">Time</label>\n      </div>\n      <div class=\"trip-sort__item trip-sort__item--price\">\n        <input id=\"sort-price\" class=\"trip-sort__input visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-price\">\n        <label class=\"trip-sort__btn\" for=\"sort-price\">Price</label>\n      </div>\n      <div class=\"trip-sort__item trip-sort__item--offer\">\n        <input id=\"sort-offer\" class=\"trip-sort__input visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-offer\" disabled>\n        <label class=\"trip-sort__btn\" for=\"sort-offer\">Offers</label>\n      </div>\n    </form>\n  `;\n}\n\nexport default class SortView {\n  getTemplate() {\n    return createSortTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","const EventFormMode = {\n  EDIT: 'edit',\n  CREATE: 'create',\n};\n\nconst TRIP_EVENT_TYPES = ['taxi', 'bus', 'train', 'ship', 'drive', 'flight', 'check-in', 'sightseeing', 'restaurant'];\n\nconst TRIP_DESTINATIONS = [\n  { id: '1', name: 'Amsterdam', description: 'A beautiful city with canals.', pictures: ['https://loremflickr.com/248/152?random=1'] },\n  { id: '2', name: 'Geneva', description: 'The city of diplomacy.', pictures: ['https://loremflickr.com/248/152?random=2'] },\n  { id: '3', name: 'Chamonix', description: 'A paradise for mountaineers.', pictures: ['https://loremflickr.com/248/152?random=3'] }\n];\n\nconst TRIP_OFFERS = [\n  { id: '1', eventType: 'taxi', title: 'Order Uber', price: 20 },\n  { id: '2', eventType: 'flight', title: 'Upgrade to comfort class', price: 50 },\n  { id: '3', eventType: 'train', title: 'Add meal service', price: 15 }\n];\n\n// Базовая дата для генерации мок-данных\nconst MOCK_DATE = '2025-03';\n\n// Диапазон дней (например, с 10 по 20 марта)\nconst DATE_RANGE = {\n  MIN_DAY: 10,\n  MAX_DAY: 20,\n};\n\n// Диапазон времени (часы и минуты)\nconst TIME_RANGE = {\n  MIN_HOUR: 0,\n  MAX_HOUR: 23,\n  MIN_MINUTE: 0,\n  MAX_MINUTE: 59,\n};\n\n// Диапазон цен\nconst PRICE_RANGE = {\n  MIN: 10,\n  MAX: 500,\n};\n\nexport { EventFormMode, TRIP_EVENT_TYPES, TRIP_DESTINATIONS, TRIP_OFFERS, MOCK_DATE, DATE_RANGE, TIME_RANGE, PRICE_RANGE };\n","import { createElement } from '../render.js';\nimport { EventFormMode } from '../const.js'; // ✅ Исправленный импорт\n\nfunction createEventFormTemplate({ mode }) {\n  const isEdit = mode === EventFormMode.EDIT;\n\n  return `\n    <form class=\"event event--edit\" action=\"#\" method=\"post\">\n      <header class=\"event__header\">\n        <div class=\"event__type-wrapper\">\n          <label class=\"event__type event__type-btn\" for=\"event-type-toggle-1\">\n            <span class=\"visually-hidden\">Choose event type</span>\n            <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"img/icons/flight.png\" alt=\"Event type icon\">\n          </label>\n          <input class=\"event__type-toggle visually-hidden\" id=\"event-type-toggle-1\" type=\"checkbox\">\n        </div>\n\n        <div class=\"event__field-group event__field-group--destination\">\n          <label class=\"event__label event__type-output\" for=\"event-destination-1\">\n            Flight\n          </label>\n          <input class=\"event__input event__input--destination\" id=\"event-destination-1\" type=\"text\" name=\"event-destination\" value=\"${isEdit ? 'Geneva' : ''}\" list=\"destination-list-1\">\n        </div>\n\n        <div class=\"event__field-group event__field-group--time\">\n          <input class=\"event__input event__input--time\" type=\"text\" name=\"event-start-time\" value=\"${isEdit ? '19/03/19 00:00' : ''}\">\n          &mdash;\n          <input class=\"event__input event__input--time\" type=\"text\" name=\"event-end-time\" value=\"${isEdit ? '19/03/19 00:00' : ''}\">\n        </div>\n\n        <button class=\"event__save-btn btn btn--blue\" type=\"submit\">Save</button>\n        <button class=\"event__reset-btn\" type=\"reset\">${isEdit ? 'Delete' : 'Cancel'}</button>\n        ${isEdit ? '<button class=\"event__rollup-btn\" type=\"button\"><span class=\"visually-hidden\">Open event</span></button>' : ''}\n      </header>\n    </form>\n  `;\n}\n\nexport default class EventFormView {\n  constructor({ mode = EventFormMode.CREATE } = {}) {\n    this.mode = mode;\n  }\n\n  getTemplate() {\n    return createEventFormTemplate({ mode: this.mode });\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render.js';\n\nfunction createEventPointTemplate(event) {\n  return `\n    <li class=\"trip-events__item\">\n      <div class=\"event\">\n        <div class=\"event__type\">\n          <img class=\"event__type-icon\" width=\"42\" height=\"42\" src=\"img/icons/${event.eventType}.png\" alt=\"Event type icon\">\n        </div>\n        <h3 class=\"event__title\">${event.eventType} ${event.destination ? event.destination.name : 'Unknown'}</h3>\n\n        <div class=\"event__schedule\">\n          <p class=\"event__time\">\n            <time class=\"event__start-time\" datetime=\"${event.startTime}\">${event.startTime.replace('T', ' ')}</time>\n            &mdash;\n            <time class=\"event__end-time\" datetime=\"${event.endTime}\">${event.endTime.replace('T', ' ')}</time>\n          </p>\n        </div>\n\n        <p class=\"event__price\">\n          €&nbsp;<span class=\"event__price-value\">${event.price}</span>\n        </p>\n      </div>\n    </li>\n  `;\n}\n\nexport default class EventPointView {\n  constructor(event) {\n    this.event = event;\n  }\n\n  getTemplate() {\n    return createEventPointTemplate(this.event);\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","// Получает случайный элемент из массива\nexport const getRandomElement = (array) => array[Math.floor(Math.random() * array.length)];\n\n// Получает случайное число в диапазоне\nexport const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n","import { getRandomElement, getRandomNumber } from '../utils.js';\nimport { TRIP_DESTINATIONS, TRIP_EVENT_TYPES, MOCK_DATE, DATE_RANGE, TIME_RANGE, PRICE_RANGE, TRIP_OFFERS } from '../const.js';\n\nexport const generateTripEvent = () => {\n  const destination = getRandomElement(TRIP_DESTINATIONS);\n  const eventType = getRandomElement(TRIP_EVENT_TYPES);\n\n  const startTime = `${MOCK_DATE}-${getRandomNumber(DATE_RANGE.MIN_DAY, DATE_RANGE.MAX_DAY)}T${getRandomNumber(TIME_RANGE.MIN_HOUR, TIME_RANGE.MAX_HOUR)}:${getRandomNumber(TIME_RANGE.MIN_MINUTE, TIME_RANGE.MAX_MINUTE)}`;\n  const endTime = `${MOCK_DATE}-${getRandomNumber(DATE_RANGE.MIN_DAY, DATE_RANGE.MAX_DAY)}T${getRandomNumber(TIME_RANGE.MIN_HOUR, TIME_RANGE.MAX_HOUR)}:${getRandomNumber(TIME_RANGE.MIN_MINUTE, TIME_RANGE.MAX_MINUTE)}`;\n\n  return {\n    id: crypto.randomUUID(),\n    eventType,\n    destinationId: destination.id,\n    startTime,\n    endTime,\n    price: getRandomNumber(PRICE_RANGE.MIN, PRICE_RANGE.MAX),\n    offerIds: TRIP_OFFERS.filter((offer) => offer.eventType === eventType && Math.random() > 0.5).map((offer) => offer.id)\n  };\n};\n\n// создаёт массив событий\nexport const generateTripEvents = () => Array.from({ length: 5 }, generateTripEvent);\n","import TripPresenter from './presenter/trip-presenter.js';\nimport TripEventModel from './model/trip-event-model.js';\n\nconst tripMainElement = document.querySelector('.trip-events');\nconst tripEventModel = new TripEventModel();\n\nconst tripPresenter = new TripPresenter(tripMainElement, tripEventModel);\ntripPresenter.init();\n","import { TRIP_DESTINATIONS, TRIP_OFFERS } from '../const.js';\nimport { generateTripEvents } from '../mock/trip-event-mock.js';\n\nexport default class TripEventModel {\n  constructor() {\n    this.tripEvents = generateTripEvents();\n    this.destinations = TRIP_DESTINATIONS;\n    this.offers = TRIP_OFFERS;\n  }\n\n  getTripEvents() {\n    return this.tripEvents;\n  }\n\n  getDestinations() {\n    return this.destinations;\n  }\n\n  getOffers() {\n    return this.offers;\n  }\n}\n","import TripFiltersView from '../view/trip-filters-view.js';\nimport SortView from '../view/sort-view.js';\nimport EventFormView from '../view/event-form-view.js';\nimport EventPointView from '../view/event-point-view.js';\nimport { render, RenderPosition } from '../render.js';\n\nexport default class TripPresenter {\n  constructor(container, tripEventModel) {\n    this.container = container;\n    this.tripEventModel = tripEventModel;\n  }\n\n  init() {\n    // Получаем данные из модели\n    const tripEvents = this.tripEventModel.getTripEvents();\n    const destinations = this.tripEventModel.getDestinations();\n\n    // Рендерим фильтры\n    render(new TripFiltersView(), this.container, RenderPosition.BEFOREEND);\n\n    // Рендерим сортировку\n    render(new SortView(), this.container, RenderPosition.BEFOREEND);\n\n    // Контейнер для списка событий\n    const eventsList = document.createElement('ul');\n    eventsList.classList.add('trip-events__list');\n    this.container.appendChild(eventsList);\n\n    // Рендерим форму редактирования первой в списке\n    if (tripEvents.length > 0) {\n      render(new EventFormView({ mode: 'edit' }), eventsList, RenderPosition.AFTERBEGIN);\n    }\n\n    // Рендерим точки маршрута\n    tripEvents.forEach((tripEvent) => {\n      const destination = destinations.find((dest) => dest.id === tripEvent.destinationId);\n      render(new EventPointView({ ...tripEvent, destination }), eventsList, RenderPosition.BEFOREEND);\n    });\n  }\n}\n"],"names":["RenderPosition","createElement","template","newElement","document","innerHTML","firstElementChild","render","component","container","place","insertAdjacentElement","getElement","TripFiltersView","getTemplate","this","element","removeElement","SortView","TRIP_EVENT_TYPES","TRIP_DESTINATIONS","id","name","description","pictures","TRIP_OFFERS","eventType","title","price","MOCK_DATE","EventFormView","constructor","mode","isEdit","createEventFormTemplate","EventPointView","event","destination","startTime","replace","endTime","getRandomElement","array","Math","floor","random","length","getRandomNumber","min","max","generateTripEvent","crypto","randomUUID","destinationId","offerIds","filter","offer","map","tripMainElement","querySelector","tripEventModel","tripEvents","Array","from","destinations","offers","getTripEvents","getDestinations","getOffers","tripPresenter","init","eventsList","classList","add","appendChild","forEach","tripEvent","find","dest"],"sourceRoot":""}